{"version":3,"sources":["modals/CreateTask.js","modals/EditTask.js","components/Card.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["CreateTaskPopup","_ref","modal","toggle","save","taskName","setTaskName","useState","description","setDescription","handleChange","e","name","value","target","_jsxs","Modal","isOpen","children","_jsx","ModalHeader","ModalBody","className","type","onChange","rows","ModalFooter","Button","color","onClick","preventDefault","taskObj","EditTaskPopup","updateTask","useEffect","Name","Description","tempObj","Card","index","deleteTask","updateListArray","setModal","colors","primaryColor","secondaryColor","class","style","handleDelete","EditTask","obj","TodoList","taskList","setTaskList","arr","localStorage","getItem","JSON","parse","tempList","splice","setItem","stringify","window","location","reload","_Fragment","map","CreateTask","push","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab558d89.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nconst CreateTaskPopup = ({modal, toggle, save}) => {\n    const [taskName, setTaskName] = useState('');\n    const [description, setDescription] = useState('');\n\n    const handleChange = (e) => {\n        \n        const {name, value} = e.target\n\n        if(name === \"taskName\"){\n            setTaskName(value)\n        }else{\n            setDescription(value)\n        }\n\n\n    }\n    \n    \n\n    const handleSave = (e) => {\n        e.preventDefault()\n        let taskObj = {}\n        taskObj[\"Name\"] = taskName\n        taskObj[\"Description\"] = description\n        save(taskObj)\n\n    }\n\n    return (\n        <Modal isOpen={modal} toggle={toggle}>\n            <ModalHeader toggle={toggle} >Create Task</ModalHeader>\n            <ModalBody>\n            \n                    <div className = \"form-group\">\n                        <label>Task Name</label>\n                        <input type=\"text\" className = \"form-control\" value = {taskName} onChange = {handleChange} name = \"taskName\"/>\n                    </div>\n                    <div className = \"form-group\">\n                        <label>Description</label>\n                        <textarea rows = \"5\" className = \"form-control\" value = {description} onChange = {handleChange} name = \"description\"></textarea>\n                    </div>\n                \n            </ModalBody>\n            <ModalFooter>\n            <Button color=\"primary\" onClick={handleSave}>Create</Button>{' '}\n            <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n            </ModalFooter>\n      </Modal>\n    );\n};\n\nexport default CreateTaskPopup;","import React, { useState , useEffect} from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nconst EditTaskPopup = ({modal, toggle, updateTask, taskObj}) => {\n    const [taskName, setTaskName] = useState('');\n    const [description, setDescription] = useState('');\n\n    const handleChange = (e) => {\n        \n        const {name, value} = e.target\n\n        if(name === \"taskName\"){\n            setTaskName(value)\n        }else{\n            setDescription(value)\n        }\n\n\n    }\n\n    useEffect(() => {\n        setTaskName(taskObj.Name)\n        setDescription(taskObj.Description)\n    },[])\n\n    const handleUpdate = (e) => {\n        e.preventDefault();\n        let tempObj = {}\n        tempObj['Name'] = taskName\n        tempObj['Description'] = description\n        updateTask(tempObj)\n    }\n\n    return (\n        <Modal isOpen={modal} toggle={toggle}>\n            <ModalHeader toggle={toggle}>Update Task</ModalHeader>\n            <ModalBody>\n            \n                    <div className = \"form-group\">\n                        <label>Task Name</label>\n                        <input type=\"text\" className = \"form-control\" value = {taskName} onChange = {handleChange} name = \"taskName\"/>\n                    </div>\n                    <div className = \"form-group\">\n                        <label>Description</label>\n                        <textarea rows = \"5\" className = \"form-control\" value = {description} onChange = {handleChange} name = \"description\"></textarea>\n                    </div>\n                \n            </ModalBody>\n            <ModalFooter>\n            <Button color=\"primary\" onClick={handleUpdate}>Update</Button>{' '}\n            <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\n            </ModalFooter>\n      </Modal>\n    );\n};\n\nexport default EditTaskPopup;","import React, {useState} from 'react';\nimport EditTask from '../modals/EditTask'\n\nconst Card = ({taskObj, index, deleteTask, updateListArray}) => {\n    const [modal, setModal] = useState(false);\n\n    const colors = [\n        {\n            primaryColor : \"#333333\",\n            secondaryColor : \"#999999\"\n        },\n        {\n            primaryColor : \"##333333\",\n            secondaryColor : \"#999999\"\n        },\n        {\n            primaryColor : \"#333333\",\n            secondaryColor : \"#999999\"\n        },\n        {\n            primaryColor : \"#333333\",\n            secondaryColor : \"#999999\"\n        },\n        {\n            primaryColor : \"#333333\",\n            secondaryColor : \"#999999\"\n        }\n    ]\n\n    const toggle = () => {\n        setModal(!modal);\n    }\n\n    const updateTask = (obj) => {\n        updateListArray(obj, index)\n    }\n\n    const handleDelete = () => {\n        deleteTask(index)\n    }\n\n    return (\n        <div class = \"card-wrapper mr-5\">\n            <div class = \"card-top\" style={{\"background-color\": colors[index%5].primaryColor}}></div>\n            <div class = \"task-holder\">\n                <span class = \"card-header\" style={{\"background-color\": colors[index%5].secondaryColor, \"border-radius\": \"100px\"}}>{taskObj.Name}</span>\n                <p className = \"mt-3\">{taskObj.Description}</p>\n\n                <div style={{\"position\": \"absolute\", \"right\" : \"20px\", \"bottom\" : \"20px\"}}>\n                    <i class = \"far fa-edit mr-3\" style={{\"color\" : colors[index%5].primaryColor, \"cursor\" : \"pointer\"}} onClick = {() => setModal(true)}></i>\n                    <i class=\"fas fa-trash-alt\" style = {{\"color\" : colors[index%5].primaryColor, \"cursor\" : \"pointer\"}} onClick = {handleDelete}></i>\n                </div>\n        </div>\n        <EditTask modal = {modal} toggle = {toggle} updateTask = {updateTask} taskObj = {taskObj}/>\n        </div>\n    );\n};\n\nexport default Card;","import React, {useEffect, useState} from 'react';\nimport CreateTask from '../modals/CreateTask'\nimport Card from './Card';\n\nconst TodoList = () => {\n    const [modal, setModal] = useState(false);\n    const [taskList, setTaskList] = useState([])\n    \n    useEffect(() => {\n        let arr = localStorage.getItem(\"taskList\")\n       \n        if(arr){\n            let obj = JSON.parse(arr)\n            setTaskList(obj)\n        }\n    }, [])\n\n\n    const deleteTask = (index) => {\n        let tempList = taskList\n        tempList.splice(index, 1)\n        localStorage.setItem(\"taskList\", JSON.stringify(tempList))\n        setTaskList(tempList)\n        window.location.reload()\n    }\n\n    const updateListArray = (obj, index) => {\n        let tempList = taskList\n        tempList[index] = obj\n        localStorage.setItem(\"taskList\", JSON.stringify(tempList))\n        setTaskList(tempList)\n        window.location.reload()\n    }\n\n    const toggle = () => {\n        setModal(!modal);\n    }\n\n    const saveTask = (taskObj) => {\n        let tempList = taskList\n        tempList.push(taskObj)\n        localStorage.setItem(\"taskList\", JSON.stringify(tempList))\n        setTaskList(taskList)\n        setModal(false)\n    }\n\n\n    return (\n        <>\n            <div className = \"header text-center\">\n                <h3>Todo List</h3>\n                <button className = \"btn btn-primary mt-2\" onClick = {() => setModal(true)} >Create Task</button>\n            </div>\n            <div className = \"task-container\">\n            {taskList && taskList.map((obj , index) => <Card taskObj = {obj} index = {index} deleteTask = {deleteTask} updateListArray = {updateListArray}/> )}\n            </div>\n            <CreateTask toggle = {toggle} modal = {modal} save = {saveTask}/>\n        </>\n    );\n};\n\nexport default TodoList;","import './App.css';\nimport TodoList from './components/TodoList'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoList />\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}